plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "application"
    id "com.google.cloud.tools.jib" version "1.0.2"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
}

version "0.1"
group "hello.world"

repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0.RC2'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

mainClassName = "hello.world.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
jib {
    to {
        image = "gcr.io/$googleProjectId/hello-world"
    }
    from {
        image = "adoptopenjdk/openjdk11-openj9:jdk-11.0.1.13-alpine-slim"
    }
    container {
        jvmFlags = [
            // this flag is appropriate for Serverless deployments
            // reducing startup time by constraining the JIT
            '-XX:TieredStopAtLevel=1', 
            '-XX:MaxRAM=256m'
        ]
    }
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
